{"version":3,"sources":["core.js","mustache.js","plugins.js","list.js"],"names":["window","log","history","push","arguments","console","asm","options","env","Array","prototype","slice","call","$","undefined","translations","key","locale","extend","test","buildOnLoad","init","testFunction","fire","message","msg","obj","color","utility","consoleEnabled","length","debug","info","warn","error","start","end","group","title","groupEnd","profile","profileEnd","documentReady","document","ready","isDev","getBaseUrl","settings","forceHttps","locationProtocol","location","protocol","hostname","e","errorHandler","logError","catchError","fn","apply","this","renderMustache","url","container","template","getJSON","elements","Object","keys","html","Mustache","render","modal","defaultOptions","method","success","onLoad","onClose","selfClose","width","height","resizable","modalClass","closeText","closeOnEscape","data","showClose","leaveOutTimerId","_openModal","close","dialog","contentReady","layer","that","autoOpen","show","effect","duration","children","empty","self","content","append","on","ajax","type","done","jQuery","global","factory","exports","define","amd","mustache","isFunction","object","escapeRegExp","string","replace","testRegExp","re","RegExp_test","isWhitespace","nonSpaceRe","escapeHtml","String","s","entityMap","parseTemplate","tags","stripSpace","hasTag","nonSpace","spaces","tokens","pop","compileTags","split","spaceRe","isArray","Error","openingTagRe","RegExp","closingTagRe","closingCurlyRe","sections","value","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","i","valueLength","charAt","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","view","parentContext","cache",".","parent","Writer","Object_toString","toString","&","<",">","\"","'","/","match","index","substring","search","lookup","name","names","context","indexOf","clearCache","parse","partials","renderTokens","originalTemplate","subRender","buffer","j","escape","version","defaultWriter","to_html","send","result","ajaxForm","action","replaceWithData","animateLoad","onFinish","submit","preventDefault","attr","ajaxAnimateLoad","serialize","textStatus","replaceWith","jqXHR","errorThrown","loaderImage","loaderWidth","loaderHeight","fadeDuration","backgroundDisabled","each","ajaxLoader","backgroundOverlay","animate","opacity","remove","ajaxLoadElm","callback","source","get","list","baseUrl","initEditButtons","initDeleteButtons","initAddButton","click","domain","formUrl","encodeURI","reloadList","confirmed","confirm","confirm_delete","postData"],"mappings":"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","file":"core.js","sourcesContent":["/**\n * console.log wrapper\n */\nwindow.log = function () {\n    log.history = log.history || [];   // store logs to an array for reference\n    log.history.push(arguments);\n    if (console && console.log && asm.options.env == 'dev') {\n        console.log(Array.prototype.slice.call(arguments));\n    }\n}\n\n/** main js object **/\n;\n(function ($, undefined) {\n\n    window.asm = window.asm || {};\n\n    asm.translations = asm.translations || {\n        key: 'value'\n    },\n\n    asm.options = asm.options ||\n    {\n        locale: 'de_DE',\n        env: 'prod'\n    },\n\n    $.extend(asm.options, {test: false});\n\n    asm.buildOnLoad = {\n        init: function () {\n            //asm.buildOnLoad.testFunction();\n        },\n\n        testFunction: function () {\n            // some function stuff\n        }\n    },\n\n    asm.fire = {\n        message: function(msg, obj, color) {\n            if(asm.utility.consoleEnabled()) {\n                obj = (obj) ? obj : '';\n                if ('' != color) {\n                    color = 'color: ' + color + ';';\n                }\n\n                if(typeof msg !== 'string') {\n                    console.log('%c ' + 'data: ', color + 'font-family:Arial, Mono; font-size:13px;', msg);\n                } else {\n                    console.log('%c ' + msg, color + 'font-family: Arial, Mono; font-size:13px;', obj);\n                }\n            }\n        }\n    },\n\n    asm.log = function(msg, obj) {\n        msg = (arguments.length === 2) ? msg + ': ' : msg;\n        asm.fire.message(msg, obj, '');\n    },\n\n    asm.debug = function(msg, obj) {\n        asm.fire.message(msg, obj, 'green');\n    },\n\n    asm.info = function(msg, obj) {\n        asm.fire.message(msg, obj, '#00F');\n    },\n\n    asm.warn = function(msg, obj) {\n        asm.fire.message(msg, obj, '#FFA500');\n    },\n\n    asm.error = function(msg, obj) {\n        asm.fire.message(msg, obj, 'Orangered');\n    },\n\n    asm.start = function(msg, obj) {\n        asm.fire.message(msg, obj, '#0F0');\n    },\n\n    asm.end = function(msg, obj) {\n        asm.fire.message(msg, obj, '#F00');\n    },\n\n    asm.group = function(title) {\n        var obj = (obj) ? obj : '';\n        if(asm.utility.consoleEnabled()) console.group(title);\n    },\n\n    asm.groupEnd = function() {\n        var obj = (obj) ? obj : '';\n        if(asm.utility.consoleEnabled()) console.groupEnd();\n    },\n\n    asm.profile = function(title) {\n        if(asm.utility.consoleEnabled()) {\n            (title) ? console.profile(title) : console.profile();\n        }\n    },\n\n    asm.profileEnd = function(title) {\n        if(asm.utility.consoleEnabled()) {\n            (title) ? console.profileEnd('End Profile: ' + title) : console.profileEnd('End Profile');\n        }\n    },\n\n    /*\n     *  General Helper namespace for asm\n     *\n     * */\n    asm.utility = {\n\n        /*\n         * Create a document ready call\n         * */\n        documentReady: function (call) {\n            $(document).ready(function () {\n                call;\n            })\n        },\n\n        isDev: function() {\n            return ('dev' == asm.options.env);\n        },\n\n        consoleEnabled: function() {\n            return (asm.utility.isDev() && window.console);\n        },\n\n        /*\n         * get The Base Url of the current page\n         * options :\n         * forceHttps : boolean (returns base url as https)\n         *\n         * return string\n         */\n        getBaseUrl: function (options) {\n            var settings = $.extend({\n                    forceHttps: false\n                },\n                options\n            );\n\n            try {\n                var locationProtocol = location.protocol;\n\n                if (true == settings.forceHttps) {\n                    locationProtocol = 'https:'\n                }\n                return locationProtocol + '//' + location.hostname;\n            } catch (e) {\n                asm.errorHandler.logError(e);\n            }\n        }\n    },\n\n    /*\n     * General error handlers\n     */\n    asm.errorHandler = {\n        catchError: function (fn) {\n            return function () {\n                try {\n                    return fn.apply(this, arguments);\n                } catch (e) {\n                    asm.errorHandler.logError(e);\n                }\n            }\n        },\n\n        logError: function (e) {\n            console.log('error: ' + e);\n        }\n    },\n\n    asm.renderMustache = function(url, container, template) {\n        $.getJSON(url, function(elements) {\n            if (Object.keys(elements).length > 0) {\n                $(container).html(\n                    Mustache.render(\n                        $(template).html(),\n                        elements\n                    )\n                );\n                asm.log('mustache::refreshed ' + template);\n            } else {\n                asm.log('mustache::no elements found for ' + url);\n            }\n        });\n    },\n\n    /*\n     * Pop up or div update function\n     *\n     * Can do an ajax call and with the response it will create an modal window\n     * or updates an locations content\n     *\n     */\n    asm.modal = {\n\n        defaultOptions: {\n            url: \"\",\n            method: 'GET',\n            success: function () {},\n            onLoad: function () {},\n            onClose: function () {},\n            modal: true,\n            selfClose: false,\n            width: 680,\n            height: 'auto',\n            resizable: false,\n            modalClass: null,\n            closeText: '',\n            closeOnEscape: true,\n            data: null,\n            showClose: true\n        },\n\n        leaveOutTimerId: 0,\n\n        init: function (options) {\n            if (options && typeof(options) == 'object') {\n                asm.modal.options = $.extend({}, asm.modal.defaultOptions, options);\n            }\n            this._openModal();\n        },\n\n        close: function() {\n            $(this).dialog('destroy');\n        },\n\n        _openModal: function () {\n            var that = this,\n                content = $('#asm-dialog').children('.content');\n\n            function contentReady(data) {\n\n                var layer = $('#asm-dialog').dialog({\n                    modal: that.options.modal,\n                    autoOpen: that.options.autoOpen,\n                    width: that.options.width,\n                    height: that.options.height,\n                    resizable: that.options.resizable,\n                    closeText: that.options.closeText,\n                    closeOnEscape: that.options.closeOnEscape,\n                    show: {effect: \"fadeIn\", duration: 800},\n                    //zIndex: 11000,\n                    close: function (ev, ui) {\n                        $(this).dialog('destroy');\n                        $('#asm-dialog').children('.content').empty();\n                        if (that.options && typeof that.options.onClose === 'function') {\n                            that.options.onClose(self);\n                        }\n                    }\n                });\n\n                content.empty();\n                content.append(data);\n                layer.dialog('open');\n\n                asm.log('created dialog');\n\n                $('.ui-widget-overlay.ui-front').on('click', function () {\n                    layer.dialog('destroy');\n                    $('#asm-dialog').children('.content').empty();\n                    if (that.options && typeof that.options.onClose === 'function') {\n                        that.options.onClose(self);\n                    }\n                });\n\n                if (that.options.success !== undefined) {\n                    that.options.success(data);\n                }\n\n                if (that.options && typeof that.options.onLoad === 'function') {\n                    that.options.onLoad(self);\n                }\n            }\n\n            if (typeof that.options.url !== \"undefined\" && that.options.url != '') {\n                $.ajax({\n                    url: that.options.url,\n                    type: that.options.method\n                }).done(function (data) {\n                    contentReady(data);\n                });\n            } else {\n                contentReady(that.options.data);\n            }\n        }\n    }\n})(jQuery);\n\nasm.buildOnLoad.init();\n","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false*/\n\n(function (global, factory) {\n    if (typeof exports === \"object\" && exports) {\n        factory(exports); // CommonJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory); // AMD\n    } else {\n        factory(global.Mustache = {}); // <script>\n    }\n}(this, function (mustache) {\n\n    var Object_toString = Object.prototype.toString;\n    var isArray = Array.isArray || function (object) {\n            return Object_toString.call(object) === '[object Array]';\n        };\n\n    function isFunction(object) {\n        return typeof object === 'function';\n    }\n\n    function escapeRegExp(string) {\n        return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    }\n\n    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n    // See https://github.com/janl/mustache.js/issues/189\n    var RegExp_test = RegExp.prototype.test;\n    function testRegExp(re, string) {\n        return RegExp_test.call(re, string);\n    }\n\n    var nonSpaceRe = /\\S/;\n    function isWhitespace(string) {\n        return !testRegExp(nonSpaceRe, string);\n    }\n\n    var entityMap = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        \"/\": '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n            return entityMap[s];\n        });\n    }\n\n    var whiteRe = /\\s*/;\n    var spaceRe = /\\s+/;\n    var equalsRe = /\\s*=/;\n    var curlyRe = /\\s*\\}/;\n    var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n    /**\n     * Breaks up the given `template` string into a tree of tokens. If the `tags`\n     * argument is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n     * course, the default is to use mustaches (i.e. mustache.tags).\n     *\n     * A token is an array with at least 4 elements. The first element is the\n     * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n     * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n     * all text that appears outside a symbol this element is \"text\".\n     *\n     * The second element of a token is its \"value\". For mustache tags this is\n     * whatever else was inside the tag besides the opening symbol. For text tokens\n     * this is the text itself.\n     *\n     * The third and fourth elements of the token are the start and end indices,\n     * respectively, of the token in the original template.\n     *\n     * Tokens that are the root node of a subtree contain two more elements: 1) an\n     * array of tokens in the subtree and 2) the index in the original template at\n     * which the closing tag for that section begins.\n     */\n    function parseTemplate(template, tags) {\n        if (!template)\n            return [];\n\n        var sections = [];     // Stack to hold section tokens\n        var tokens = [];       // Buffer to hold the tokens\n        var spaces = [];       // Indices of whitespace tokens on the current line\n        var hasTag = false;    // Is there a {{tag}} on the current line?\n        var nonSpace = false;  // Is there a non-space char on the current line?\n\n        // Strips all whitespace tokens array for the current line\n        // if there was a {{#tag}} on it and otherwise only space.\n        function stripSpace() {\n            if (hasTag && !nonSpace) {\n                while (spaces.length)\n                    delete tokens[spaces.pop()];\n            } else {\n                spaces = [];\n            }\n\n            hasTag = false;\n            nonSpace = false;\n        }\n\n        var openingTagRe, closingTagRe, closingCurlyRe;\n        function compileTags(tags) {\n            if (typeof tags === 'string')\n                tags = tags.split(spaceRe, 2);\n\n            if (!isArray(tags) || tags.length !== 2)\n                throw new Error('Invalid tags: ' + tags);\n\n            openingTagRe = new RegExp(escapeRegExp(tags[0]) + '\\\\s*');\n            closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tags[1]));\n            closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tags[1]));\n        }\n\n        compileTags(tags || mustache.tags);\n\n        var scanner = new Scanner(template);\n\n        var start, type, value, chr, token, openSection;\n        while (!scanner.eos()) {\n            start = scanner.pos;\n\n            // Match any text between tags.\n            value = scanner.scanUntil(openingTagRe);\n\n            if (value) {\n                for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n                    chr = value.charAt(i);\n\n                    if (isWhitespace(chr)) {\n                        spaces.push(tokens.length);\n                    } else {\n                        nonSpace = true;\n                    }\n\n                    tokens.push([ 'text', chr, start, start + 1 ]);\n                    start += 1;\n\n                    // Check for whitespace on the current line.\n                    if (chr === '\\n')\n                        stripSpace();\n                }\n            }\n\n            // Match the opening tag.\n            if (!scanner.scan(openingTagRe))\n                break;\n\n            hasTag = true;\n\n            // Get the tag type.\n            type = scanner.scan(tagRe) || 'name';\n            scanner.scan(whiteRe);\n\n            // Get the tag value.\n            if (type === '=') {\n                value = scanner.scanUntil(equalsRe);\n                scanner.scan(equalsRe);\n                scanner.scanUntil(closingTagRe);\n            } else if (type === '{') {\n                value = scanner.scanUntil(closingCurlyRe);\n                scanner.scan(curlyRe);\n                scanner.scanUntil(closingTagRe);\n                type = '&';\n            } else {\n                value = scanner.scanUntil(closingTagRe);\n            }\n\n            // Match the closing tag.\n            if (!scanner.scan(closingTagRe))\n                throw new Error('Unclosed tag at ' + scanner.pos);\n\n            token = [ type, value, start, scanner.pos ];\n            tokens.push(token);\n\n            if (type === '#' || type === '^') {\n                sections.push(token);\n            } else if (type === '/') {\n                // Check section nesting.\n                openSection = sections.pop();\n\n                if (!openSection)\n                    throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n                if (openSection[1] !== value)\n                    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n            } else if (type === 'name' || type === '{' || type === '&') {\n                nonSpace = true;\n            } else if (type === '=') {\n                // Set the tags for the next time around.\n                compileTags(value);\n            }\n        }\n\n        // Make sure there are no open sections when we're done.\n        openSection = sections.pop();\n\n        if (openSection)\n            throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n        return nestTokens(squashTokens(tokens));\n    }\n\n    /**\n     * Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.\n     */\n    function squashTokens(tokens) {\n        var squashedTokens = [];\n\n        var token, lastToken;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            if (token) {\n                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n                    lastToken[1] += token[1];\n                    lastToken[3] = token[3];\n                } else {\n                    squashedTokens.push(token);\n                    lastToken = token;\n                }\n            }\n        }\n\n        return squashedTokens;\n    }\n\n    /**\n     * Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.\n     */\n    function nestTokens(tokens) {\n        var nestedTokens = [];\n        var collector = nestedTokens;\n        var sections = [];\n\n        var token, section;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                case '^':\n                    collector.push(token);\n                    sections.push(token);\n                    collector = token[4] = [];\n                    break;\n                case '/':\n                    section = sections.pop();\n                    section[5] = token[2];\n                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n                    break;\n                default:\n                    collector.push(token);\n            }\n        }\n\n        return nestedTokens;\n    }\n\n    /**\n     * A simple string scanner that is used by the template parser to find\n     * tokens in template strings.\n     */\n    function Scanner(string) {\n        this.string = string;\n        this.tail = string;\n        this.pos = 0;\n    }\n\n    /**\n     * Returns `true` if the tail is empty (end of string).\n     */\n    Scanner.prototype.eos = function () {\n        return this.tail === \"\";\n    };\n\n    /**\n     * Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.\n     */\n    Scanner.prototype.scan = function (re) {\n        var match = this.tail.match(re);\n\n        if (!match || match.index !== 0)\n            return '';\n\n        var string = match[0];\n\n        this.tail = this.tail.substring(string.length);\n        this.pos += string.length;\n\n        return string;\n    };\n\n    /**\n     * Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.\n     */\n    Scanner.prototype.scanUntil = function (re) {\n        var index = this.tail.search(re), match;\n\n        switch (index) {\n            case -1:\n                match = this.tail;\n                this.tail = \"\";\n                break;\n            case 0:\n                match = \"\";\n                break;\n            default:\n                match = this.tail.substring(0, index);\n                this.tail = this.tail.substring(index);\n        }\n\n        this.pos += match.length;\n\n        return match;\n    };\n\n    /**\n     * Represents a rendering context by wrapping a view object and\n     * maintaining a reference to the parent context.\n     */\n    function Context(view, parentContext) {\n        this.view = view == null ? {} : view;\n        this.cache = { '.': this.view };\n        this.parent = parentContext;\n    }\n\n    /**\n     * Creates a new context using the given view with this context\n     * as the parent.\n     */\n    Context.prototype.push = function (view) {\n        return new Context(view, this);\n    };\n\n    /**\n     * Returns the value of the given name in this context, traversing\n     * up the context hierarchy if the value is absent in this context's view.\n     */\n    Context.prototype.lookup = function (name) {\n        var cache = this.cache;\n\n        var value;\n        if (name in cache) {\n            value = cache[name];\n        } else {\n            var context = this, names, index;\n\n            while (context) {\n                if (name.indexOf('.') > 0) {\n                    value = context.view;\n                    names = name.split('.');\n                    index = 0;\n\n                    while (value != null && index < names.length)\n                        value = value[names[index++]];\n                } else {\n                    value = context.view[name];\n                }\n\n                if (value != null)\n                    break;\n\n                context = context.parent;\n            }\n\n            cache[name] = value;\n        }\n\n        if (isFunction(value))\n            value = value.call(this.view);\n\n        return value;\n    };\n\n    /**\n     * A Writer knows how to take a stream of tokens and render them to a\n     * string, given a context. It also maintains a cache of templates to\n     * avoid the need to parse the same template twice.\n     */\n    function Writer() {\n        this.cache = {};\n    }\n\n    /**\n     * Clears all cached templates in this writer.\n     */\n    Writer.prototype.clearCache = function () {\n        this.cache = {};\n    };\n\n    /**\n     * Parses and caches the given `template` and returns the array of tokens\n     * that is generated from the parse.\n     */\n    Writer.prototype.parse = function (template, tags) {\n        var cache = this.cache;\n        var tokens = cache[template];\n\n        if (tokens == null)\n            tokens = cache[template] = parseTemplate(template, tags);\n\n        return tokens;\n    };\n\n    /**\n     * High-level method that is used to render the given `template` with\n     * the given `view`.\n     *\n     * The optional `partials` argument may be an object that contains the\n     * names and templates of partials that are used in the template. It may\n     * also be a function that is used to load partial templates on the fly\n     * that takes a single argument: the name of the partial.\n     */\n    Writer.prototype.render = function (template, view, partials) {\n        var tokens = this.parse(template);\n        var context = (view instanceof Context) ? view : new Context(view);\n        return this.renderTokens(tokens, context, partials, template);\n    };\n\n    /**\n     * Low-level method that renders the given array of `tokens` using\n     * the given `context` and `partials`.\n     *\n     * Note: The `originalTemplate` is only ever used to extract the portion\n     * of the original template that was contained in a higher-order section.\n     * If the template doesn't use higher-order sections, this argument may\n     * be omitted.\n     */\n    Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n        var buffer = '';\n\n        // This function is used to render an arbitrary template\n        // in the current context by higher-order sections.\n        var self = this;\n        function subRender(template) {\n            return self.render(template, context, partials);\n        }\n\n        var token, value;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                    value = context.lookup(token[1]);\n\n                    if (!value)\n                        continue;\n\n                    if (isArray(value)) {\n                        for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n                            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n                        }\n                    } else if (typeof value === 'object' || typeof value === 'string') {\n                        buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n                    } else if (isFunction(value)) {\n                        if (typeof originalTemplate !== 'string')\n                            throw new Error('Cannot use higher-order sections without the original template');\n\n                        // Extract the portion of the original template that the section contains.\n                        value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n                        if (value != null)\n                            buffer += value;\n                    } else {\n                        buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n                    }\n\n                    break;\n                case '^':\n                    value = context.lookup(token[1]);\n\n                    // Use JavaScript's definition of falsy. Include empty arrays.\n                    // See https://github.com/janl/mustache.js/issues/186\n                    if (!value || (isArray(value) && value.length === 0))\n                        buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\n                    break;\n                case '>':\n                    if (!partials)\n                        continue;\n\n                    value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\n                    if (value != null)\n                        buffer += this.renderTokens(this.parse(value), context, partials, value);\n\n                    break;\n                case '&':\n                    value = context.lookup(token[1]);\n\n                    if (value != null)\n                        buffer += value;\n\n                    break;\n                case 'name':\n                    value = context.lookup(token[1]);\n\n                    if (value != null)\n                        buffer += mustache.escape(value);\n\n                    break;\n                case 'text':\n                    buffer += token[1];\n                    break;\n            }\n        }\n\n        return buffer;\n    };\n\n    mustache.name = \"mustache.js\";\n    mustache.version = \"0.8.1\";\n    mustache.tags = [ \"{{\", \"}}\" ];\n\n    // All high-level mustache.* functions use this writer.\n    var defaultWriter = new Writer();\n\n    /**\n     * Clears all cached templates in the default writer.\n     */\n    mustache.clearCache = function () {\n        return defaultWriter.clearCache();\n    };\n\n    /**\n     * Parses and caches the given template in the default writer and returns the\n     * array of tokens it contains. Doing this ahead of time avoids the need to\n     * parse templates on the fly as they are rendered.\n     */\n    mustache.parse = function (template, tags) {\n        return defaultWriter.parse(template, tags);\n    };\n\n    /**\n     * Renders the `template` with the given `view` and `partials` using the\n     * default writer.\n     */\n    mustache.render = function (template, view, partials) {\n        return defaultWriter.render(template, view, partials);\n    };\n\n    // This is here for backwards compatibility with 0.4.x.\n    mustache.to_html = function (template, view, partials, send) {\n        var result = mustache.render(template, view, partials);\n\n        if (isFunction(send)) {\n            send(result);\n        } else {\n            return result;\n        }\n    };\n\n    // Export the escaping function so that the user may override it.\n    // See https://github.com/janl/mustache.js/issues/244\n    mustache.escape = escapeHtml;\n\n    // Export these mainly for testing, but also for advanced usage.\n    mustache.Scanner = Scanner;\n    mustache.Context = Context;\n    mustache.Writer = Writer;\n\n}));\n","// Place any jQuery/helper plugins in here.\n\n(function ($) {\n    $.fn.ajaxForm = function (options) {\n        var settings = $.extend({\n            action: \"\",\n            method: \"\",\n            replaceWithData: true,\n            animateLoad: true,\n            onFinish: null\n        }, options);\n\n        try {\n            this.submit(function (e) {\n                e.preventDefault();\n\n                //get the url for the form\n                var that = $(this);\n\n                if (\"\" == settings.action) {\n                    settings.action = that.attr('action');\n                }\n\n                if (\"\" == settings.method) {\n                    settings.method = that.attr('method');\n                }\n\n                if (true == settings.animateLoad) {\n                    that.ajaxAnimateLoad();\n                }\n\n                $.ajax({\n                    type: settings.method,\n                    url: settings.action,\n                    data: that.serialize(),\n                    success: function (data, textStatus, jqXHR) {\n                        asm.log('form::response: ' + textStatus);\n                        if (true == settings.replaceWithData) {\n                            that.replaceWith(data);\n                        }\n\n                        if (typeof settings.onFinish === 'function') {\n                            settings.onFinish(self);\n                        }\n                    },\n                    error: function (jqXHR, textStatus, errorThrown) {\n                        asm.log('form::response: ' + errorThrown);\n                        that.replaceWith(jqXHR);\n                        that.ajaxForm(settings);\n                    }\n                });\n            });\n\n            return false;\n        } catch (e) {\n            asm.log(e);\n        }\n    };\n}(jQuery));\n\n/**\n * jQuery ajax loader plugin\n */\n(function ($) {\n    $.fn.ajaxAnimateLoad = function (options) {\n        // Create some defaults, extending them with any options that were provided\n        var settings = $.extend({\n            loaderImage: '/img/ajax-loader.gif',\n            loaderWidth: '32px',\n            loaderHeight: '32px',\n            fadeDuration: 200,\n            action: 'start',\n            backgroundDisabled: false\n        }, options);\n\n        return this.each(function () {\n            var that = $(this),\n                ajaxLoader = '<span id=\"ajaxloader\" style=\"display: block; width: '\n                    + settings.loaderWidth + '; height: '\n                    + settings.loaderHeight + '; background: transparent url('\n                    + settings.loaderImage\n                    + ') no-repeat center center; position: absolute; top: 50%; left: 50%;\">&nbsp;</span>';\n\n            var backgroundOverlay = '<div class=\"modalBackgroundOverlay\" style=\"position: fixed; width:100%; ' +\n                'height: 100%; top: 0px; left: 0px; zoom: 1; opacity: 0.0; background-color: #FFF; ' +\n                'z-index: 201;\">&nbsp;</div>';\n\n            if (settings.action == 'start') {\n                if (true == settings.backgroundDisabled) {\n                    if (that.children('.modalBackgroundOverlay').length == 0) {\n                        that.append(backgroundOverlay);\n                        jQuery('.modalBackgroundOverlay').animate({opacity: 0.4}, settings.fadeDuration);\n                    }\n                    if (that.children('#ajaxloader').length == 0) {\n                        that.append(ajaxLoader);\n                    }\n                } else {\n                    that.attr('style', 'position: relative;').append(ajaxLoader).animate({opacity: 0.4}, settings.fadeDuration);\n                }\n            } else if (settings.action == 'stop') {\n                if (that.children('.modalBackgroundOverlay').length > 0) {\n                    that.children('#ajaxloader').remove();\n                    that.children('.modalBackgroundOverlay').animate({opacity: 0.0}, settings.fadeDuration).remove();\n                } else {\n                    that.attr('style', 'position: static;').remove(\"#ajaxloader\").animate({opacity: 1.0}, settings.fadeDuration);\n                }\n            }\n        });\n    };\n})(jQuery);\n\n/**\n * ajax load a url into target, using loader animation\n */\n(function ($) {\n    $.fn.ajaxLoadElm = function (options, callback) {\n\n        // Create some defaults, extending them with any options that were provided\n        var settings = $.extend({\n                source: '',\n                animateLoad: true,\n                backgroundDisabled: false\n            }, options),\n            that = $(this);\n\n        try {\n            if (true == settings.animateLoad) {\n                that.ajaxAnimateLoad({'backgroundDisabled': settings.backgroundDisabled});\n            }\n\n            $.get(settings.source, function (data) {\n                that.replaceWith(data);\n            });\n\n            if (typeof callback == 'function') { // make sure the callback is a function\n                callback.call(this); // brings the scope to the callback\n            }\n\n            return false;\n        }\n        catch (e) {\n            asm.log(e);\n        }\n    };\n})(jQuery);\n\n/**\n * mustache auto-renderer\n */\n(function ($) {\n    $.fn.renderMustache = function (options) {\n\n        var settings = $.extend({\n                source: \"\",\n                template: \"\"\n            }, options),\n            that = $(this);\n\n        if (\"\" == settings.source) {\n            settings.url = that.data('source');\n        }\n\n        if (\"\"  == settings.template) {\n            settings.template = that.data('template');\n        }\n\n        $.getJSON(settings.source, function(data) {\n            if (Object.keys(data).length > 0) {\n                that.html(\n                    Mustache.render(\n                        $(settings.template).html(),\n                        data\n                    )\n                );\n                asm.log('mustache::refreshed ' + settings.template);\n            } else {\n                asm.log('mustache::no elements found for ' + settings.source);\n            }\n        });\n    };\n})(jQuery);\n",";\n(function ($) {\n\n    window.asm.list = window.asm.list || {};\n\n    asm.list = {\n\n        baseUrl: asm.utility.getBaseUrl(),\n\n        init: function () {\n            asm.debug('asm.list init');\n            if ($('.asm-edit-btn').length > 0) {\n                asm.list.initEditButtons();\n            }\n\n            if ($('.asm-delete-btn').length > 0) {\n                asm.list.initDeleteButtons();\n            }\n\n            if ($('.asm-add-btn').length > 0) {\n                asm.list.initAddButton();\n            }\n        },\n\n        initEditButtons: function () {\n            $('.asm-edit-btn').click(function (e) {\n                var key = $(this).data('key'),\n                    locale = $(this).data('locale'),\n                    domain = $(this).data('domain'),\n                    formUrl = $(this).data('link');\n\n                formUrl = encodeURI(formUrl + '/' + key + '/' + locale  + '/' + domain);\n\n                asm.debug('formUrl: ' + formUrl);\n\n                asm.modal.init({\n                    url: formUrl,\n                    onClose: function () {\n                        asm.list.reloadList();\n                    },\n                    success: function () {\n                        $('#asm-translation-form').ajaxForm();\n                    }\n                });\n            });\n        },\n\n        initAddButton: function () {\n            $('.asm-add-btn').click(function (e) {\n                var formUrl = $(this).data('link');\n                asm.debug('formUrl: ' + formUrl);\n                asm.modal.init({\n                    url: formUrl,\n                    width: 500,\n                    resizable: true,\n                    onClose: function () {\n                        asm.list.reloadList();\n                    }\n                });\n            });\n        },\n\n        initDeleteButtons: function () {\n            $('.asm-delete-btn').click(function (e) {\n                var confirmed = confirm(asm.translations.confirm_delete);\n                if (confirmed == true) {\n\n                    var postData = {\n                        key: $(this).data('key'),\n                        locale: $(this).data('locale'),\n                        domain: $(this).data('domain')\n                    };\n\n                    $.ajax({\n                        type: 'POST',\n                        url: $(this).data('link'),\n                        data: postData,\n                        success: function (data, textStatus, jqXHR) {\n                            asm.log('delete::response: ' + textStatus);\n                            asm.list.reloadList();\n                        },\n                        error: function (jqXHR, textStatus, errorThrown) {\n                            asm.log('delete::response: ' + errorThrown);\n                        }\n                    });\n                }\n            });\n        },\n\n        reloadList: function () {\n            asm.debug('fired reload');\n            $('#asm-translations-tbl').renderMustache({\n                source: $('#asm-translation-list').data('link'), //add filters\n                template: '#asm-translations-tbl-tpl'\n            });\n\n            asm.list.initEditButtons();\n            asm.list.initDeleteButtons();\n        }\n    }\n})(jQuery);\n\nasm.utility.documentReady(asm.list.init());\n"],"sourceRoot":"/source/"}